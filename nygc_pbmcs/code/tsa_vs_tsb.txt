#### Figure 2 ####

### TSA1, TSB1, TSA2 and TSB2 here are the matrices with scaled reads for LLL (series 1) or OMNI (series 2)
### I extracted them like this (but not sure this is how it should be shown, in case some users don't have/want to make the seurat object)

TSA1 = LLL.comb@assays$TSA@data
TSB1 = LLL.comb@assays$TSB@data
TSA2 = OMNI.comb@assays$TSA@data
TSB2 = OMNI.comb@assays$TSB@data

# panel b 

tsa1 = as.data.frame(t(TSA1))
tsb1 = as.data.frame(t(TSB1))
lll = cbind(tsa1,tsb1)
colnames(lll) = c("TSA_CD4",  "TSA_CD56" ,"TSA_CD45", "TSA_CD16", "TSA_CD14", "TSA_CD3", "TSA_CD19", "TSA_CD8", "TSA_CD11c", "TSB_CD4", "TSB_CD56", "TSB_CD45", "TSB_CD16", "TSB_CD14", "TSB_CD3", "TSB_CD19", "TSB_CD8", "TSB_CD11c")

pal <- colorRampPalette(c("white", "dark green"))
greens = pal(10)

par(mfrow=c(3,3))
par(mar=c(1,1,1,1))
smoothScatter(lll$TSA_CD3, lll$TSB_CD3, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="", xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD4, lll$TSB_CD4, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="",  xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD8, lll$TSB_CD8, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="", xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD19, lll$TSB_CD19, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="",  xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD16, lll$TSB_CD16, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="",xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD56, lll$TSB_CD56, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="",xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD11c, lll$TSB_CD11c, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="",xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD14, lll$TSB_CD14, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="",xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)
smoothScatter(lll$TSA_CD45, lll$TSB_CD45, nbin = 328, colramp = colorRampPalette(c("white", greens)),nrpoints = 0, ret.selection = FALSE, xlab="", ylab="", xlim=c(0,4), ylim=c(0,4),labels=FALSE)
dg <- par("usr")
segments(dg[1],dg[3],dg[2],dg[4], col='black', lty=2)

# panel c

atac1 = read.csv("~/Desktop/R analyses/ASAP/200205_ASAP/OMNI/singlecell.csv")
atac2 = read.csv("~/Desktop/R analyses/ASAP/200205_ASAP/LLL/singlecell.csv")
atac1 = atac1[which(atac1$is__cell_barcode=="1"),]
atac2 = atac2[which(atac2$is__cell_barcode=="1"),]
atac1$pct_mito = (atac1$mitochondrial/atac1$total)*100
atac2$pct_mito = (atac2$mitochondrial/atac2$total)*100
df1 = atac1[, c(1,19)]
df1$variable = "OMNI"
df2 = atac2[, c(1,19)]
df2$variable = "LLL"
df = rbind(df1, df2)
ggplot(df, aes(x = variable, y = pct_mito)) +
  geom_violin(scale = "width", adjust = 1, width = 0.5)


# panel d

tsa1 = as.data.frame(t(TSA1))
tsa1$lysis = "LLL"
colnames(tsa1) = c("CD4", "CD56", "CD45", "CD16", "CD14", "CD3", "CD19", "CD8", "CD11c", "lysis")
tsa2 = as.data.frame(t(TSA2))
tsa2$lysis = "OMNI"
colnames(tsa2) = c("CD4", "CD56", "CD45", "CD16", "CD14", "CD3", "CD19", "CD8", "CD11c", "lysis")
library(tidyr)
library(ggplot2)
tsa1.df <- data.frame(group = "LLL",
                      CD4 = tsa1[,1],
                      CD56 = tsa1[,2],
                      CD45 = tsa1[,3],
                      CD16 = tsa1[,4],
                      CD14 = tsa1[,5],
                      CD3 = tsa1[,6],
                      CD19 = tsa1[,7],
                      CD8 = tsa1[,8],
                      CD11c = tsa1[,9])
tsa2.df <- data.frame(group = "OMNI",
                      CD4 = tsa2[,1],
                      CD56 = tsa2[,2],
                      CD45 = tsa2[,3],
                      CD16 = tsa2[,4],
                      CD14 = tsa2[,5],
                      CD3 = tsa2[,6],
                      CD19 = tsa2[,7],
                      CD8 = tsa2[,8],
                      CD11c = tsa2[,9])
tsa.all = rbind(tsa1.df, tsa2.df)
tsa.tall <- tsa.all %>% gather(key = Antibody, value = Value, CD4:CD11c)

p1 = ggplot(tsa.tall, aes(Antibody, Value, fill = group, colour = group)) +
  geom_violin(scale = "width", adjust = 0.8, width = 0.5) + ylab("CLR TSA UBI counts")


